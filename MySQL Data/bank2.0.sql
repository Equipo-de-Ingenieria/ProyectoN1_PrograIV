-- MySQL Script generated by MySQL Workbench
-- Sun Mar 15 10:43:33 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema eif209_2001_p01
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `eif209_2001_p01` ;

-- -----------------------------------------------------
-- Schema eif209_2001_p01
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `eif209_2001_p01` DEFAULT CHARACTER SET utf8 ;
USE `eif209_2001_p01` ;

-- -----------------------------------------------------
-- Table `eif209_2001_p01`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eif209_2001_p01`.`User` ;

CREATE TABLE IF NOT EXISTS `eif209_2001_p01`.`User` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT ' ',
  `name` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(8) NULL,
  `type` TINYINT NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `id_user` VARCHAR(9) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eif209_2001_p01`.`Currency`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eif209_2001_p01`.`Currency` ;

CREATE TABLE IF NOT EXISTS `eif209_2001_p01`.`Currency` (
  `name` VARCHAR(3) NOT NULL,
  `exchange_rate_buy` DOUBLE NULL,
  `exchange_rate_sale` DOUBLE NULL,
  `symbol` VARCHAR(1) NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eif209_2001_p01`.`Account_Type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eif209_2001_p01`.`Account_Type` ;

CREATE TABLE IF NOT EXISTS `eif209_2001_p01`.`Account_Type` (
  `id` TINYINT(1) NOT NULL,
  `description` VARCHAR(45) NULL,
  `interest_rate` DOUBLE NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eif209_2001_p01`.`Account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eif209_2001_p01`.`Account` ;

CREATE TABLE IF NOT EXISTS `eif209_2001_p01`.`Account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `balance` DOUBLE NOT NULL DEFAULT 0.0,
  `user_id` INT NOT NULL,
  `currency_name` VARCHAR(3) NOT NULL,
  `account_type_id` TINYINT NOT NULL,
  `transaction_limit` DOUBLE NULL DEFAULT 1000000,
  `is_active` TINYINT(1) NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `fk_Account_Usuario_idx` (`user_id` ASC) INVISIBLE,
  INDEX `fk_Account_Currency1_idx` (`currency_name` ASC) VISIBLE,
  INDEX `fk_Account_Account_Type1_idx` (`account_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_Account_User`
    FOREIGN KEY (`user_id`)
    REFERENCES `eif209_2001_p01`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Account_Currency`
    FOREIGN KEY (`currency_name`)
    REFERENCES `eif209_2001_p01`.`Currency` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Account_Account_Type1`
    FOREIGN KEY (`account_type_id`)
    REFERENCES `eif209_2001_p01`.`Account_Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eif209_2001_p01`.`Transfer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eif209_2001_p01`.`Transfer` ;

CREATE TABLE IF NOT EXISTS `eif209_2001_p01`.`Transfer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `depositor_account` INT NOT NULL,
  `creditor_account` INT NOT NULL,
  `amount` DOUBLE NOT NULL,
  `date` DATE NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Transfer_Account1_idx` (`depositor_account` ASC) VISIBLE,
  INDEX `fk_Transfer_Account_Creditor_idx` (`creditor_account` ASC) VISIBLE,
  CONSTRAINT `fk_Transfer_Account_Depositor`
    FOREIGN KEY (`depositor_account`)
    REFERENCES `eif209_2001_p01`.`Account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Transfer_Account_Creditor`
    FOREIGN KEY (`creditor_account`)
    REFERENCES `eif209_2001_p01`.`Account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eif209_2001_p01`.`Favorite`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eif209_2001_p01`.`Favorite` ;

CREATE TABLE IF NOT EXISTS `eif209_2001_p01`.`Favorite` (
  `id_user` INT NOT NULL,
  `id_account` INT NOT NULL,
  PRIMARY KEY (`id_user`, `id_account`),
  INDEX `fk_Favorite_User1_idx` (`id_user` ASC) VISIBLE,
  CONSTRAINT `fk_Favorite_User1`
    FOREIGN KEY (`id_user`)
    REFERENCES `eif209_2001_p01`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Favorite_Account1`
    FOREIGN KEY (`id_account`)
    REFERENCES `eif209_2001_p01`.`Account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


insert into User (name, phone, type, password, id_user) values ('Erick Badilla Gonzalez', '72072289', 1, 'admin',  '504250594');
insert into User (name, phone, type, password, id_user) values ('Carlos Zhou Zheng', '60712317', 0, 'admin',  '504250413');
insert into User (name, phone, type, password, id_user) values ('Jose Antonio Cespedes', '60801241', 0, 'admin',  '504260594');
insert into User (name, phone, type, password, id_user) values ('Adrian Jimenez Cerdas', '80425059', 0, 'admin',  '504260580');

insert into Currency (name, exchange_rate_buy, exchange_rate_sale, symbol) values ('CRC', 1, 1,'₡');
insert into Currency (name, exchange_rate_buy, exchange_rate_sale, symbol) values ('USD', 560, 570,'$');
insert into Currency (name, exchange_rate_buy, exchange_rate_sale, symbol) values ('EUR', 700, 770,'€');

insert into Account_Type (id, description, interest_rate) values (0, 'Corriente', '0.03');
insert into Account_Type (id, description, interest_rate) values (1, 'Ahorro', '0.05');


insert into Account (balance, user_id, currency_name, account_type_id, transaction_limit, is_active) values (0.0, '2', 'CRC', 1, 1000000, 1);
insert into Account (balance, user_id, currency_name, account_type_id, transaction_limit, is_active) values (0.0, '2', 'CRC', 1, 1000000, 1);	
insert into Account (balance, user_id, currency_name, account_type_id, transaction_limit, is_active) values (0.0, '2', 'USD', 1, 1000000, 1);

insert into Account (balance, user_id, currency_name, account_type_id, transaction_limit, is_active) values (0.0, '3', 'CRC', 1, 1000000, 1);
insert into Account (balance, user_id, currency_name, account_type_id, transaction_limit, is_active) values (0.0, '3', 'CRC', 1, 1000000, 1);	
insert into Account (balance, user_id, currency_name, account_type_id, transaction_limit, is_active) values (0.0, '3', 'USD', 1, 1000000, 1);

insert into Account (balance, user_id, currency_name, account_type_id, transaction_limit, is_active) values (0.0, '4', 'CRC', 1, 1000000, 1);
insert into Account (balance, user_id, currency_name, account_type_id, transaction_limit, is_active) values (0.0, '4', 'CRC', 1, 1000000, 1);	
insert into Account (balance, user_id, currency_name, account_type_id, transaction_limit, is_active) values (0.0, '4', 'USD', 1, 1000000, 1);

-- Cuentas favoritas de Carlos Zhou viculadas con las de Tono
insert into Favorite (id_user, id_account) values (2, 4);
insert into Favorite (id_user, id_account) values (2, 5);
insert into Favorite (id_user, id_account) values (2, 6);

-- Cuentas favoritas de Tono vinculadas con las de Adrian
insert into Favorite (id_user, id_account) values (3, 7);
insert into Favorite (id_user, id_account) values (3, 8);
insert into Favorite (id_user, id_account) values (3, 9);


select * from Account where user_id = 2;

select * from User;


insert into Transfer (depositor_account, creditor_account, amount, `date`) values (2, 3, 500, sysdate());
insert into Transfer (depositor_account, creditor_account, amount, `date`) values (2, 3, 100, sysdate());
insert into Transfer (depositor_account, creditor_account, amount, `date`) values (2, 3, 1000, sysdate());


select depositor_account, creditor_account, amount, `date` from transfer where depositor_account = 2;